{"_type":"export","__export_format":4,"__export_date":"2020-06-30T18:06:24.525Z","__export_source":"insomnia.desktop.app:v2020.2.2","resources":[{"_id":"req_c77e3a386b3844b8b617511a8d4ccb01","authentication":{},"body":{},"created":1568821397959,"description":"This is a sample GET request that will retrieve data from httpbin. It will return various information about the request.","headers":[],"isPrivate":false,"metaSortKey":-1568821452452,"method":"GET","modified":1568824635126,"name":"Get data from httpbin","parameters":[],"parentId":"fld_fc901476faa042dbbe573517e00182a3","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/get","_type":"request"},{"_id":"fld_fc901476faa042dbbe573517e00182a3","created":1568821301903,"description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1568821301903,"modified":1568821682739,"name":"Basic Requests","parentId":"wrk_85458f2b7d9845ad90c15ce838c619d1","_type":"request_group"},{"_id":"wrk_85458f2b7d9845ad90c15ce838c619d1","created":1568819137465,"description":"This is a demo of [Insomnia Documenter](https://www.npmjs.com/package/insomnia-documenter), a tool that allows you to create beautiful API documentation pages using only your Insomnia export file!\n\nThis demo has two environments - Production and Development. There's only one environment variable in the project, which is **baseUrl**. The value of **baseUrl** for the selected environment is {{baseUrl}}. You can switch between environments using the select box in the top left corner of the page.\n\nInsomnia Documenter is currently in a beta phase, so there are high chances that bugs will appear here and there! If you've found a bug or you have a suggestion on how to improve the project, you can either [create an issue on GitHub](https://github.com/jozsefsallai/insomnia-documenter/issues) or, if you know what to do, [send in a pull request](https://github.com/jozsefsallai/insomnia-documenter/pulls). All contributions are highly appreciated! :)","modified":1568819572918,"name":"Insomnia Documenter Demo","parentId":null,"scope":null,"_type":"workspace"},{"_id":"req_e461221fe0d447849464656407fed9a6","authentication":{},"body":{},"created":1568821452402,"description":"This is yet another GET request, but this time we're passing two parameters to it: a statement about `insomnia` and another statement about `insomnia-documenter`.","headers":[],"isPrivate":false,"metaSortKey":-1568821452402,"method":"GET","modified":1578149499805,"name":"Get request with params","parameters":[{"description":"This is the first query parameter.","id":"pair_e33fc4369e79442daf6057df541fcf44","name":"insomnia","value":"is awesome"},{"description":"This is the coolest query parameter.","id":"pair_26c6cd75d0744a56a0a205ac8869851e","name":"insomnia-documenter","value":"is pretty cool"}],"parentId":"fld_fc901476faa042dbbe573517e00182a3","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/get","_type":"request"},{"_id":"req_94ea4df5eb2a49c184972f22e212ae0f","authentication":{},"body":{},"created":1576521184083,"description":"This request also contains an example response. You can view it in the panel on the right hand side.\n\n<!-- RESPONSE -->\n{\n  \"ok\": true,\n  \"data\": [\n    {\n      \"name\": \"Insomnia\",\n      \"description\": \"REST client for humans\"\n    },\n    {\n      \"name\": \"Insomnia Documenter\",\n      \"description\": \"Documentation generator for Insomnia\"\n    }\n  ]\n}\n<!-- ENDRESPONSE -->\n\nIn order to generate an example response block, you must enclose it between a `<!-- RESPONSE -->` and a corresponding `<!-- ENDRESPONSE -->` tag (case-sensitive).","headers":[],"isPrivate":false,"metaSortKey":-1568821452377,"method":"GET","modified":1576522648804,"name":"Request with example response","parameters":[{"id":"pair_e33fc4369e79442daf6057df541fcf44","name":"insomnia","value":"is awesome"},{"id":"pair_26c6cd75d0744a56a0a205ac8869851e","name":"insomnia-documenter","value":"is pretty cool"}],"parentId":"fld_fc901476faa042dbbe573517e00182a3","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/get","_type":"request"},{"_id":"req_2a5bde603a3240b485d1b4877d53e6f3","authentication":{},"body":{"mimeType":"application/json","text":"{\n\t\"username\": \"joe\",\n\t\"password\": \"nanachi\"\n}\n"},"created":1593539198471,"description":"You can specify multiple example responses -- now with status codes! Instead of `<!-- RESPONSE -->` you can write `<!-- RESPONSE 200 -->`. You still have to close it using `<!-- ENDRESPONSE -->` though!\n\n<!-- RESPONSE 200 -->\n{\n  \"ok\": true,\n  \"token\": \"123abc\"\n}\n<!-- ENDRESPONSE -->\n\n<!-- RESPONSE 400 -->\n{\n  \"ok\": false,\n  \"error\": \"Username or password not provided.\"\n}\n<!-- ENDRESPONSE -->\n\n<!-- RESPONSE 401 -->\n{\n  \"ok\": false,\n  \"error\": \"Incorrect username and/or password.\"\n}\n<!-- ENDRESPONSE -->","headers":[{"id":"pair_82bdeafd21ab4eb09032311cde25a178","name":"Content-Type","value":"application/json"}],"isPrivate":false,"metaSortKey":-1568821452364.5,"method":"POST","modified":1593540369353,"name":"Request with example response v2","parameters":[{"id":"pair_e33fc4369e79442daf6057df541fcf44","name":"insomnia","value":"is awesome"},{"id":"pair_26c6cd75d0744a56a0a205ac8869851e","name":"insomnia-documenter","value":"is pretty cool"}],"parentId":"fld_fc901476faa042dbbe573517e00182a3","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/post","_type":"request"},{"_id":"req_92bec8746b17422d8338dcfcfa32a9d9","authentication":{},"body":{"mimeType":"application/json","text":"{\n\t\"insomnia\": \"is awesome\",\n\t\"insomnia-documenter\": \"is pretty cool too I think\"\n}"},"created":1568821526516,"description":"This is a POST request that will send a JSON body to the server.","headers":[{"description":"This header specifies that we're sending JSON to the server.","id":"pair_0890b965b8d94802826f1feaf70fe1c4","name":"Content-Type","value":"application/json"}],"isPrivate":false,"metaSortKey":-1568821452352,"method":"POST","modified":1578147411096,"name":"Post JSON to httpbin","parameters":[],"parentId":"fld_fc901476faa042dbbe573517e00182a3","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/post","_type":"request"},{"_id":"req_da07901f187a45899681f4947ac05f14","authentication":{},"body":{"mimeType":"","text":"Hello World!"},"created":1568827179774,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1568821452327,"method":"POST","modified":1568827217773,"name":"Post plaintext to httpbin","parameters":[],"parentId":"fld_fc901476faa042dbbe573517e00182a3","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/post","_type":"request"},{"_id":"req_64793dce96224266a3b4f7e7a4f853b8","authentication":{},"body":{"mimeType":"multipart/form-data","params":[{"id":"pair_ef3e2dd4a54840ceb4392d5a34c8780d","name":"name","value":"Joe"},{"id":"pair_a7de43178c4a46d7be4599c73c73dc92","name":"age","value":"18"}]},"created":1568821705527,"description":"This demo will show you how requests with content type `multipart/form-data` are being handled. It's a simple PATCH request that will send a form to the server.\n\nNotice that there's also a new variable in the URL: `postUuid` - which (in this dummy example) refers to the unique resource identifier of the post that we want to send a PATCH request for.","headers":[{"description":"This header specifies that we're sending a multipart form to the server.","id":"pair_766b1ba9b7f74c9e9149aac4ce6d44dc","name":"Content-Type","value":"multipart/form-data"}],"isPrivate":false,"metaSortKey":-1568821452302,"method":"PATCH","modified":1578147439409,"name":"Patch entry (multipart)","parameters":[],"parentId":"fld_fc901476faa042dbbe573517e00182a3","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/anything/{{postUuid}}","_type":"request"},{"_id":"req_fa8bfae58f6a4cb39dbdfcbc98a58612","authentication":{},"body":{"mimeType":"application/x-www-form-urlencoded","params":[{"description":"","id":"pair_96e8ab2d2f724500b227b55abd472bdb","name":"name","value":"Joe"},{"description":"Requests that send a form to the server can have descriptions for each field.","id":"pair_e592aad8eb244909868686861ce4bdd9","name":"age","value":"18"}]},"created":1568821940449,"description":"The content type of this request is `application/x-www-form-urlencoded`. It's fairly similar to `multipart/form-data`, but this time we're passing a querystring to the server instead of a full form.\n\nJust like in our previous example, this also has a `postUuid` variable in the URL.","headers":[{"description":"","id":"pair_ae53b2c870ce4c2c97c53733aea01030","name":"Content-Type","value":"application/x-www-form-urlencoded"}],"isPrivate":false,"metaSortKey":-1568821452252,"method":"PUT","modified":1578149536213,"name":"Put entry (urlencoded)","parameters":[],"parentId":"fld_fc901476faa042dbbe573517e00182a3","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/anything/{{postUuid}}","_type":"request"},{"_id":"req_9f05af2e528246fba1563ae02c8ccc57","authentication":{},"body":{},"created":1568821991627,"description":"This will delete an entry with the provided `postUuid`.","headers":[{"description":"This is a dummy header.","id":"pair_a63a7d9b51484200b4c49f2387f77911","name":"X-Insomnia-Documenter","value":"Hello there, hope you're doing good :)"},{"description":"The response is expected to be XML.","id":"pair_e4379614fe10483f9b3dedf6e6f5148b","name":"Accept","value":"application/xml"}],"isPrivate":false,"metaSortKey":-1568821452202,"method":"DELETE","modified":1578147522145,"name":"Delete entry","parameters":[],"parentId":"fld_fc901476faa042dbbe573517e00182a3","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/anything/{{postUuid}}","_type":"request"},{"_id":"req_2444f4770b2d4b8db6a65ce1f110fc26","authentication":{},"body":{},"created":1568822202310,"description":"Nesting folders is fairly simple with Insomnia Documenter. The page will recursively generate the content both in the sidebar and the content section, which will make sure that all of your requests and folders will be processed and displayed properly on the page.","headers":[],"isPrivate":false,"metaSortKey":-1568822202310,"method":"GET","modified":1568825029591,"name":"Get post details","parameters":[],"parentId":"fld_cbde97e968c74b4c910a2de0020d3b76","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/anything/{{postUuid}}","_type":"request"},{"_id":"fld_cbde97e968c74b4c910a2de0020d3b76","created":1568822186682,"description":"While folder descriptions aren't currently supported by Insomnia, you can modify the config manually and add descriptions for each folder. Cool, huh?","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1568821452152,"modified":1568822190020,"name":"Nested Folder","parentId":"fld_fc901476faa042dbbe573517e00182a3","_type":"request_group"},{"_id":"req_34db662f42524e93b203917f8c6a22ed","authentication":{},"body":{},"created":1568822305572,"description":"Since the rendering is done recursively, very deep directory structures are supported in Insomnia Documenter. But you shouldn't go too far! It's not very pleasing aesthetically and will make the navigation a little more painful, both in the documentation page and the Insomnia itself.","headers":[],"isPrivate":false,"metaSortKey":-1568822305572,"method":"GET","modified":1568825117219,"name":"Get anything","parameters":[],"parentId":"fld_8a0c523df2b74457a98f08c4d62a3232","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/anything","_type":"request"},{"_id":"fld_8a0c523df2b74457a98f08c4d62a3232","created":1568822292927,"description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1568822292927,"modified":1568822292927,"name":"Even deeper!","parentId":"fld_843c48bfaf1b4a6b90aac7e842b20bcf","_type":"request_group"},{"_id":"fld_843c48bfaf1b4a6b90aac7e842b20bcf","created":1568822265290,"description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1568822202260,"modified":1568822268208,"name":"Deeper nest","parentId":"fld_cbde97e968c74b4c910a2de0020d3b76","_type":"request_group"},{"_id":"req_fa0814d345de49bbb6e563173b0d11c4","authentication":{},"body":{},"created":1568822340189,"description":"This is a simple GET request that also uses a cookiejar we created in Insomnia. The cookie that is passed to the request is declared so that it will only be sent if the url is \"httpbin.org\" and the path is \"/cookies\", so no other request but this one will have cookies passed to it.\n\nDon't see the cookies in the request code on the right hand side? You probably haven't switched to the production environment! Remember: the baseUrl will only be \"httpbin.org\" if the environment is \"Production\", so the cookie will not match the domain in the other environments.","headers":[],"isPrivate":false,"metaSortKey":-1568822419013,"method":"GET","modified":1568825329680,"name":"Get cookies","parameters":[],"parentId":"fld_c8336bddc82d4c71b9cfd6910a570b44","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/cookies","_type":"request"},{"_id":"fld_c8336bddc82d4c71b9cfd6910a570b44","created":1568822403687,"description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1568821301890.5,"modified":1568822826353,"name":"Advanced requests","parentId":"wrk_85458f2b7d9845ad90c15ce838c619d1","_type":"request_group"},{"_id":"req_f22828c0c764428fae23d63e07a1d4f1","authentication":{"token":"{{token}}","type":"bearer"},"body":{},"created":1568822418963,"description":"This request shows how an authentication header works. In this example, we're using a Bearer token/JWT. In production environment, this token will be a JWT containing the following fields:\n```\n{\n  \"username\": \"joe\",\n  \"password\": \"joe123\"\n}\n```\n\nIn other environments, the token will be a regular string.","headers":[],"isPrivate":false,"metaSortKey":-1568822418963,"method":"GET","modified":1568825555162,"name":"Bearer authentication","parameters":[],"parentId":"fld_c8336bddc82d4c71b9cfd6910a570b44","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"https://httpbin.org/bearer","_type":"request"},{"_id":"req_742c87fdeaa54cc8ae67c50f6cf90982","authentication":{"prefix":"Insomnia","token":"{{token}}","type":"bearer"},"body":{},"created":1568822750065,"description":"This is the same as the [previous Bearer authentication request](#req_f22828c0c764428fae23d63e07a1d4f1), except here we change the prefix of the authentication header's value from \"Bearer\" to \"Insomnia\". This will return a 401 Unauthorized error in production because httpbin expects the prefix to be \"Bearer\".","headers":[],"isPrivate":false,"metaSortKey":-1568822362267.5,"method":"GET","modified":1568826123328,"name":"Bearer authentication with custom prefix","parameters":[],"parentId":"fld_c8336bddc82d4c71b9cfd6910a570b44","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"https://httpbin.org/bearer","_type":"request"},{"_id":"req_949bb469ae1147ecb52ee6851bec1094","authentication":{},"body":{},"created":1568822795001,"description":"This is a sample request that will return your IP address. This request really only exists to demonstrate that root-level requests also work :)","headers":[],"isPrivate":false,"metaSortKey":-1568821301878,"method":"GET","modified":1568826117544,"name":"Get IP address","parameters":[],"parentId":"wrk_85458f2b7d9845ad90c15ce838c619d1","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{baseUrl}}/ip","_type":"request"},{"_id":"env_e5134b3d9617710a055f922094ac946854bfa1d9","color":null,"created":1568819138060,"data":{"baseUrl":"http://localhost:3000","postUuid":44},"dataPropertyOrder":{"&":["baseUrl","postUuid"]},"isPrivate":false,"metaSortKey":1568819138060,"modified":1568821879007,"name":"Base Environment","parentId":"wrk_85458f2b7d9845ad90c15ce838c619d1","_type":"environment"},{"_id":"jar_e5134b3d9617710a055f922094ac946854bfa1d9","cookies":[{"domain":"httpbin.org","httpOnly":false,"id":"dadfe2eb-a370-4a3b-bbbb-99cffaeb324b","key":"hello","path":"/cookies","secure":false,"value":"world"}],"created":1568819138109,"modified":1568819294484,"name":"Default Jar","parentId":"wrk_85458f2b7d9845ad90c15ce838c619d1","_type":"cookie_jar"},{"_id":"spc_266d65b96c0e4ff48db56280ad4ae27c","contentType":"yaml","contents":"","created":1593539183084,"fileName":"Insomnia Documenter Demo","modified":1593539183084,"parentId":"wrk_85458f2b7d9845ad90c15ce838c619d1","_type":"api_spec"},{"_id":"env_85bda018c217484caeb8632fd2640978","color":"#7d69cb","created":1568819189892,"data":{"baseUrl":"https://httpbin.org","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImpvZSIsInBhc3N3b3JkIjoiam9lMTIzIn0.gP1gYgGlbqW13egDw1-_u-erKep24kFTj8Ra2yYhi_0"},"dataPropertyOrder":{"&":["baseUrl","token"]},"isPrivate":false,"metaSortKey":1568819189892,"modified":1568822635086,"name":"Production","parentId":"env_e5134b3d9617710a055f922094ac946854bfa1d9","_type":"environment"},{"_id":"env_b1608838a8fb48559e9b738fcd459e94","color":"#ec7600","created":1568819210935,"data":{"baseUrl":"http://localhost:3000","token":"bearer_token"},"dataPropertyOrder":{"&":["baseUrl","token"]},"isPrivate":false,"metaSortKey":1568819210935,"modified":1568822647051,"name":"Development","parentId":"env_e5134b3d9617710a055f922094ac946854bfa1d9","_type":"environment"}]}